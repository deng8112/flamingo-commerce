interface Commerce_Product {
    marketPlaceCode: String!
    media: [Commerce_ProductMedia!],
    price: Commerce_ProductPriceInfo!,
    title: String!
    categories: Commerce_ProductCategories!
    description: String!
    meta: Commerce_ProductMeta!
    loyalty: Commerce_ProductLoyalty!
    attributes: Commerce_ProductAttributes!
}


type Commerce_SimpleProduct implements Commerce_Product {
    marketPlaceCode: String!
    media: [Commerce_ProductMedia!],
    price: Commerce_ProductPriceInfo!,
    title: String!
    categories: Commerce_ProductCategories!
    description: String!
    meta: Commerce_ProductMeta!
    loyalty: Commerce_ProductLoyalty!
    attributes: Commerce_ProductAttributes!
}


type Commerce_ConfigurableProduct implements Commerce_Product {
    marketPlaceCode: String!
    media: [Commerce_ProductMedia!],
    price: Commerce_ProductPriceInfo!,
    title: String!
    categories: Commerce_ProductCategories!
    description: String!
    meta: Commerce_ProductMeta!
    loyalty: Commerce_ProductLoyalty!
    attributes: Commerce_ProductAttributes
}

type Commerce_ProductCategories {
    categories:   [Commerce_CategoryTeaser!]
    mainCategory: Commerce_CategoryTeaser!
}

type Commerce_ProductMeta {
    description:    String!
    title:		    String!
    keywords:	    [String!]
}

type Commerce_ProductLoyalty {
    price:      Commerce_ProductLoyaltyPriceInfo!
    earning:    Commerce_ProductLoyaltyEarningInfo!
}

type Commerce_ProductLoyaltyPriceInfo {
    type: String!
    default: Commerce_Price!
    isDiscounted: Boolean!
    discounted: Commerce_Price!
    discountText: String!
    minPointsToSpent: Float!
    maxPointsToSpent: Float!
    context: Commerce_PriceContext!
}

"LoyaltyEarningInfo shows the type and the points earned"
type Commerce_ProductLoyaltyEarningInfo {
    "The type of the LoyaltyEarningInfo, e.g. MilesAndMore"
    type: String!
    "The value of the LoyaltyEarningInfo, currency can be e.g. points or miles"
    default: Commerce_Price!
}

type Commerce_PriceContext {
    customerGroup: String!
    channelCode: String!
    locale: String!
}


type Commerce_ProductMedia {
    type:      String!
    mimeType:  String!
    usage:     String!
    title:     String!
    reference: String!
}

type Commerce_ProductAttributes {
    attributeKeys: [String!]
    attributes: [Commerce_ProductAttribute!]
    hasAttribute(key: String!): Boolean
    getAttribute(key: String!): Commerce_ProductAttribute
    getAttributesByKey(keys: [String!]): [Commerce_ProductAttribute!]
}

type Commerce_ProductAttribute {
    code: String!
    codeLabel: String!
    label: String!
    unitCode: String!
    values: [String!]
}

type Commerce_CategoryTeaser {
    code: String!
    path: String!
    name: String!
    parent: Commerce_CategoryTeaser
}

type Commerce_ProductPriceInfo {
    default: Commerce_Price
    discounted: Commerce_Price
    discountText: String!
    activeBase: Float!
    activeBaseAmount: Float!
    activeBaseUnit: String
    isDiscounted: Boolean
    campaignRules: [String!]
    denyMoreDiscounts: Boolean
    #    context: Commerce_PriceContext
    taxClass: String!
}

type Commerce_Product_SearchResult {
    products: [Commerce_Product!]
    facets: [Commerce_Search_Facet!]!
    suggestions: [Commerce_Search_Suggestion!]
    searchMeta: Commerce_Search_Meta!
    hasSelectedFacet: Boolean!
}

extend type Query {
    Commerce_Product(marketplaceCode: String!): Commerce_Product
    Commerce_Product_Search(searchRequest: Commerce_Search_Request): Commerce_Product_SearchResult!
}
